{"ast":null,"code":"var _jsxFileName = \"/workspace/react-components/react-components/src/components/HTTPHooks.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HTTPHooks() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [error, setError] = useState(null);\n  const [postMessage, setPostMessage] = useState(null);\n  const postToApi = () => {\n    axios.post('https://jsonplaceholder.typicode.com/posts', {\n      title: 'Hello world!',\n      body: 'It works!',\n      userId: 123\n    }).then(response => {\n      setPostMessage(response.status === 201 ? `Success! Title: ${response.data.title}` : 'Failed');\n    });\n  };\n  useEffect(() => {\n    axios.get('https://jsonplaceholder.typicode.com/posts/1').then(response => {\n      console.log(response);\n      const data = Array.isArray(response.data) ? response.data : [response.data];\n      setPosts(data);\n    }).catch(error => {\n      setError(error.message);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: postToApi,\n      children: \"Create Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: postMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Posts:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), posts.length ? posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [post.id, \". \", post.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"By User ID \", post.userId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 29\n      }, this)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }, this)) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 23\n    }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Loading posts ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_s(HTTPHooks, \"BHZ5Qcn9uWxVQn3Af2u59uZDu9c=\");\n_c = HTTPHooks;\nexport default HTTPHooks;\nvar _c;\n$RefreshReg$(_c, \"HTTPHooks\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","HTTPHooks","_s","posts","setPosts","error","setError","postMessage","setPostMessage","postToApi","post","title","body","userId","then","response","status","data","get","console","log","Array","isArray","catch","message","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","length","map","id","_c","$RefreshReg$"],"sources":["/workspace/react-components/react-components/src/components/HTTPHooks.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\n\nfunction HTTPHooks() {\n    const [posts, setPosts] = useState([]);\n    const [error, setError] = useState(null);\n    const [postMessage, setPostMessage] = useState(null);\n    const postToApi = () => {\n        axios.post(\n            'https://jsonplaceholder.typicode.com/posts',\n            {\n                title: 'Hello world!',\n                body: 'It works!',\n                userId: 123,\n            }\n        ).then(response => {\n            setPostMessage(response.status === 201\n                ? `Success! Title: ${response.data.title}`\n                : 'Failed'\n            )\n        })\n    }\n\n    useEffect(() => {\n        axios.get('https://jsonplaceholder.typicode.com/posts/1')\n        .then(response => {\n            console.log(response);\n            const data = Array.isArray(response.data)\n                ? response.data\n                : [response.data]\n            setPosts(data);\n        })\n        .catch(error => {\n            setError(error.message);\n        })\n    }, [])\n    return (\n        <div>\n            <button onClick={postToApi}>\n                Create Post\n            </button>\n            <p>{postMessage}</p>\n            <h2>Posts:</h2>\n            {\n                posts.length ? (\n                    posts.map(post => (\n                        <div key={post.id}>\n                            <h2>{post.id}. {post.title}</h2>\n                            <h4>By User ID {post.userId}</h4>\n                            <p>{post.body}</p>\n                            <hr />\n                        </div>\n                    ))\n                ) : (\n                    error\n                    ? <p>{error}</p>\n                    : <h4>Loading posts ...</h4>\n                )\n            }\n        </div>\n    )\n}\n\nexport default HTTPHooks"],"mappings":"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"},"metadata":{},"sourceType":"module"}